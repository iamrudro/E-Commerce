->Express: Express is a minimal and flexible web framework for Node.js that helps developers build server-side applications efficiently. It provides:
· Routing: For handling requests (GET, POST, etc.) and defining endpoints.
· Middleware: To process requests and responses (e.g., authentication,logging).
· Scalability: Lightweight and easily extendable.
It's widely used for creating APls and web applications due to its simplicity and
rich ecosystem of plugins.

------------------------------------------------------------------------------------------

->Dotenv: The dotenv package is a Node.js library that allows you to manage environment variables efficiently. It reads a .env file in your project and loads the variables into process.env, making them accessible in your application.
Key Features:
· Security: Keeps sensitive data like API keys, database credentials, and secret tokens out of the source code.
· Ease of use: Simplifies configuration for different environments (development, testing, production).
· Lightweight: Adds minimal overhead to your project.

------------------------------------------------------------------------------------------

->Mongoose: Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js. It simplifies working with MongoDB by providing:
· Schema-based modeling: Define the structure of your documents in the
database.
· Data validation: Enforce rules for the data before saving.
· Query building: Easily interact with the database using methods instead of raw queries.
------------------------------------------------------------------------------------------

->validator : The validator package is a popular JavaScript library used for data validation and sanitization in Node.js. It provides a collection of robust, pre-built validation and sanitization functions for common use cases, such as validating email addresses, URLs, and much more.

------------------------------------------------------------------------------------------

->bcrypt: is a library in Node.js used for securely hashing and verifying passwords. It is widely used in authentication systems to protect user credentials. The hashing process ensures that even if a database is compromised, the plain-text passwords cannot easily be retrieved.

Password --> 123456789
Hashed Password --> $2b$10$e2F3G6x.jNJ75hq17v42POxX5e4uAa7jmsHQdkBvSYOhE3m9xF8m6

------------------------------------------------------------------------------------------

